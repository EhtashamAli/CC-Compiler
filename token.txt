<symbol, #>
<kw, header>
<symbol, {>
<kw, iostream>
<symbol, }>
<symbol, newline>
<kw, using>
<symbol, sp>
<kw, namespace>
<symbol, sp>
<kw, std>
<symbol, ;>
<symbol, newline>
<kw, digit>
<symbol, sp>
<kw, container>
<symbol, (>
<symbol, )>
<symbol, {>
<symbol, newline>
<kw, digit>
<symbol, sp>
<id, @1num>
<symbol, ,>
<int, 1>
<id, ssn>
<symbol, ,>
<id, ans>
<op, =>
<float, 1468.49>
<symbol, ;>
<symbol, newline>
<kw, output>
<symbol, :>
<string, Enter number for table \n>
<symbol, ;>
<symbol, sp>
<kw, input>
<symbol, :>
<symbol, sp>
<id, num>
<symbol, ;>
<symbol, newline>
<kw, output>
<symbol, :>
<string, Enter value of n>
<symbol, ;>
<symbol, newline>
<kw, input>
<symbol, :>
<int, 1>
<id, n>
<symbol, ;>
<symbol, newline>
<kw, loop>
<symbol, (>
<id, int>
<symbol, sp>
<id, i>
<op, =>
<int, 1>
<symbol, ;>
<symbol, sp>
<id, i>
<op, <>
<id, n>
<symbol, ;>
<symbol, sp>
<id, i>
<op, >
<op, ->
<symbol, )>
<symbol, newline>
<symbol, {>
<symbol, newline>
<id, 	ans>
<op, >
<op, ==>
<id, ns>
<op, >
<op, >>
<id, @1num>
<symbol, ;>
<symbol, newline>
<id, 	if>
<symbol, (>
<id, ans>
<op, >>
<int, 0>
<symbol, )>
<symbol, newline>
<id, 	output>
<symbol, :>
<string, ans>
<symbol, ;>
<symbol, newline>
<id, 	else>
<symbol, sp>
<symbol, newline>
<id, 	output>
<symbol, :>
<string, neg>
<symbol, ;>
<symbol, newline>
<symbol, }>
<symbol, newline>
<kw, return>
<symbol, sp>
<kw, empty>
<symbol, ;>
<symbol, newline>
<symbol, }>
<symbol, newline>
