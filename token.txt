<symbol, #>
<kw, header>
<symbol, {>
<kw, iostream>
<symbol, }>
<symbol, newline>
<kw, using>
<kw, namespace>
<kw, std>
<symbol, ;>
<symbol, newline>
<kw, digit>
<kw, container>
<symbol, (>
<symbol, )>
<symbol, {>
<symbol, newline>
<kw, digit>
<id, a1 >
<symbol, ,>
<id, a2 >
<symbol, ,>
<id, a>
<symbol, ,>
<id, num>
<symbol, ;>
<symbol, newline>
<kw, output>
<symbol, :>
<string, Enter number, for, table \n>
<symbol, ;>
<symbol, newline>
<kw, input>
<symbol, :>
<id, num>
<symbol, ;>
<symbol, newline>
<kw, output>
<symbol, :>
<string, Enter value of n>
<symbol, ;>
<symbol, newline>
<kw, input>
<symbol, :>
<id, n>
<symbol, ;>
<symbol, newline>
<kw, loop>
<symbol, (>
<kw, digit>
<id, i>
<op, =>
<symbol, ;>
<id, i>
<op, <>
<id, n>
<symbol, ;>
<id, i>
<op, ++>
<symbol, )>
<symbol, newline>
<symbol, {>
<symbol, newline>
<id, ans>
<op, ==>
<id, ans>
<op, *>
<id, @1num>
<symbol, ;>
<symbol, newline>
<kw, this>
<symbol, (>
<id, ans>
<op, >>
<symbol, )>
<symbol, newline>
<kw, output>
<symbol, :>
<string, ans>
<symbol, ;>
<symbol, newline>
<kw, then>
<symbol, newline>
<kw, output>
<symbol, :>
<string, neg>
<symbol, ;>
<symbol, newline>
<symbol, }>
<kw, endloop>
<symbol, newline>
<kw, return>
<kw, empty>
<symbol, ;>
<symbol, newline>
<symbol, }>
<symbol, newline>
